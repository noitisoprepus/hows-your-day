@page "/"

@using Shared.DTOs.Day
@using HowsYourDayApp.Services

@inject DayService DayService
@inject NavigationManager NavigationManager

<PageTitle>How's Your Day?</PageTitle>

<h1>Hello there! How's your day?</h1>

@if (intialized)
{
    @if (alreadyPosted)
    {
        <p>You have already posted today. Come back tomorrow!</p>
    }
    else
    {
        <Ratings Rating="createDayDTO.Rating" RatingChangedEvent="OnRatingChanged"/>
        <br>
        <p>@createDayDTO.Rating</p>
        <input @bind="createDayDTO.Comment" />
        <br>
        <button @onclick="SubmitDayEntry">Submit</button>
    }
}
else
{
    <div class="spinner-border" role="status" />
}

@code {
    private CreateDayDTO createDayDTO = new CreateDayDTO();
    private bool alreadyPosted = false;
    private bool intialized = false;

    protected override async Task OnInitializedAsync()
    {
        await HandleFetchUserHasPostedToday();
        intialized = true;
    }

    private async Task HandleFetchUserHasPostedToday()
    {
        var result = await DayService.HasUserPostedTodayAsync();
        if (!result.IsSuccessStatusCode &&
            result.StatusCode == System.Net.HttpStatusCode.Unauthorized)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            alreadyPosted = await result.Content.ReadFromJsonAsync<bool>();
        }
    }

    private void OnRatingChanged(int rating)
    {
        createDayDTO.Rating = rating;
    }

    private async Task SubmitDayEntry()
    {
        alreadyPosted = true;
        await DayService.LogDayAsync(createDayDTO);

        // Reset
        createDayDTO.Rating = 0;
        createDayDTO.Comment = String.Empty;
    }
}
